services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    depends_on:
#      - postgres
#    restart: unless-stopped

  redis:
    container_name: redis
    image: redis/redis-stack
    ports:
      - '6379:6379'
      - '8001:8001'
    volumes:
      - redis:/data
    restart: unless-stopped

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo:/data/db
    restart: unless-stopped

#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express
#    ports:
#      - 8888:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: root
#      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
#    networks:
#      - mongo
#    depends_on:
#      - mongo
#    restart: unless-stopped

  # eureka-server
  eureka-server:
    build: ./eureka-server
    ports:
      - 8761:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - mongo

  api-gateway:
    build: ./api-gateway
    ports:
      - 8765:8080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      eureka-server:
        condition: service_healthy
    restart: unless-stopped

  auth-service:
    build: ./auth-service
    ports:
      - 8081:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      eureka-server:
        condition: service_healthy

  task-manager:
    build: ./task-manager
    ports:
      - 8082:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      eureka-server:
        condition: service_healthy

volumes:
  postgres:
  pgadmin:
  redis:
  mongo: